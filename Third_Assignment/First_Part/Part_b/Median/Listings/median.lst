


ARM Macro Assembler    Page 1 


    1 00000000         ; The example tha i worked on is this one : 
    2 00000000         ;
    3 00000000         ; x = [3 9 5 52 3 8 6 2 2 9 ] 
    4 00000000         ; So the medians will be : 
    5 00000000         ;
    6 00000000         ; y[0] = median[3 3 9] = 3
    7 00000000         ; y[1] = median[3 4 9] = 4
    8 00000000         ; y[2] = median[4 9 52] = 9
    9 00000000         ; y[3] = median[3 4 52] = 4
   10 00000000         ; y[4] = median[3 8 52] = 8
   11 00000000         ; y[5] = median[3 6 8] = 6
   12 00000000         ; y[6] = median[2 6 8] = 6
   13 00000000         ; y[7] = median[2 2 6] = 2
   14 00000000         ; y[8] = median[2 2 9] = 2
   15 00000000         ; y[9] = median[2 9 9] = 9
   16 00000000         ;
   17 00000000         ; the dest data will be [3 4 9 4 8 6 6 2 2 9 ] 
   18 00000000         
   19 00000000                 AREA             median, CODE, READONLY
   20 00000000                 EXPORT           main
   21 00000000 00000003 
                       first   EQU              3
   22 00000000 00000009 
                       last    EQU              9
   23 00000000 00000008 
                       num     EQU              8
   24 00000000                 ENTRY
   25 00000000         
   26 00000000         main
   27 00000000 482E            LDR              r0, =src
   28 00000002 492F            LDR              r1, =dest
   29 00000004 F04F 0208       MOV              r2, #num
   30 00000008         
   31 00000008         ; Here is the first part y[0] = median[3 3 9] = 3
   32 00000008 F04F 0303       MOV              r3, #first
   33 0000000C F850 4B04       LDR              r4, [r0], #4
   34 00000010 F850 5B08       LDR              r5, [r0], #8
   35 00000014         
   36 00000014 42A3            CMP              R3, R4      ;  if (R3 > R4)
   37 00000016 BFC7 4699       MOVGT            R9, R3      ;  Then r9 = r3 (r9
                                                             = max)
   38 0000001A 46A2            MOVGT            R10, R4     ; Then r10 = R4 (R1
                                                            0 = min)
   39 0000001C 46A1            MOVLE            R9, R4      ; else r9 = r4
   40 0000001E 469A            MOVLE            R10, R3     ; esle r10 = r3
   41 00000020 454D            CMP              R5, R9      ; if (r5 > r9)
   42 00000022 BFC8 46A9       MOVGT            R9, R5      ; then R9 = R5
   43 00000026 45AA            CMP              R10, R5     ; if (R10 > R5)
   44 00000028 BFC8 46AA       MOVGT            R10, R5     ; then R10 = R5
   45 0000002C EB03 0B04       add              R11, R3, R4 ; R11 = r3 + r4 |  
                                                            R11 is middle
   46 00000030 44AB            ADD              R11, R11, R5 ; R11 = R11 + R5
   47 00000032 EBAB 0B09       SUB              R11, R11, R9 ; R11 = R11 - R9
   48 00000036 EBAB 0B0A       SUB              R11, R11,R10 ; R11 = R11 - R10
   49 0000003A         
   50 0000003A F841 BB04       STR              R11, [r1], #4 ; Store the value
                                                             of R11 to dest
   51 0000003E         
   52 0000003E 481F            LDR              r0, =src    ; init the data are



ARM Macro Assembler    Page 2 


                                                            a again for the loo
                                                            p 
   53 00000040         med
   54 00000040         ; This loop computes the median from y[1] to y[8]
   55 00000040 E890 0038       LDMIA            R0, {R3,R4,R5}
   56 00000044         
   57 00000044 42A3            CMP              R3, R4
   58 00000046 BFC7 4699       MOVGT            R9, R3
   59 0000004A 46A2            MOVGT            R10, R4
   60 0000004C 46A1            MOVLE            R9, R4
   61 0000004E 469A            MOVLE            R10, R3
   62 00000050 454D            CMP              R5, R9
   63 00000052 BFC8 46A9       MOVGT            R9, R5
   64 00000056 45AA            CMP              R10, R5
   65 00000058 BFC8 46AA       MOVGT            R10, R5
   66 0000005C EB03 0B04       add              R11, R3, R4
   67 00000060 44AB            ADD              R11, R11, R5
   68 00000062 EBAB 0B09       SUB              R11, R11, R9
   69 00000066 EBAB 0B0A       SUB              R11, R11,R10
   70 0000006A         
   71 0000006A F841 BB04       STR              R11, [r1], #4
   72 0000006E F850 3B04       LDR              R3, [r0], #4
   73 00000072         
   74 00000072 1E52            SUBS             R2, r2, #1
   75 00000074 D1E4            BNE              med
   76 00000076         
   77 00000076         ; Here is the last Part y[9] = median[2 9 9] = 9
   78 00000076 4623            MOV              R3, R4
   79 00000078 462C            MOV              R4, R5
   80 0000007A F04F 0509       MOV              R5, #last
   81 0000007E 42A3            CMP              R3, R4
   82 00000080 BFC7 4699       MOVGT            R9, R3
   83 00000084 46A2            MOVGT            R10, R4
   84 00000086 46A1            MOVLE            R9, R4
   85 00000088 469A            MOVLE            R10, R3
   86 0000008A 454D            CMP              R5, R9
   87 0000008C BFC8 46A9       MOVGT            R9, R5
   88 00000090 45AA            CMP              R10, R5
   89 00000092 BFC8 46AA       MOVGT            R10, R5
   90 00000096 EB03 0B04       ADD              R11, R3, R4
   91 0000009A 44AB            ADD              R11, R11, R5
   92 0000009C EBAB 0B09       SUB              R11, R11, R9
   93 000000A0 EBAB 0B0A       SUB              R11, R11,R10
   94 000000A4         
   95 000000A4 F841 BB04       STR              R11, [r1], #4 ;Store the value 
                                                            of R11 to dest
   96 000000A8         
   97 000000A8         ; This is a test just to check i have saved the right va
                       lues
   98 000000A8 F8DF 8014       LDR              R8, =dest
   99 000000AC 0000000A 
                       testnum EQU              10
  100 000000AC F04F 090A       MOV              R9, #testnum
  101 000000B0         wordcopy
  102 000000B0 F858 AB04       LDR              r10, [r8], #4
  103 000000B4 F1B9 0901       SUBS             R9,R9,#1
  104 000000B8 D1FA            BNE              wordcopy
  105 000000BA         ; End of Test
  106 000000BA         



ARM Macro Assembler    Page 3 


  107 000000BA DF11    stop    SWI              0x11        ;software interrupt
                                                            
  108 000000BC         
  109 000000BC 00000000 
              00000000 
              00000000 
              00000000         AREA             Block, DATA, READWRITE
  110 00000000 00000003 
              00000009 
              00000004 
              00000034 
              00000003 
              00000008 
              00000006 
              00000002 
              00000002 
              00000009 src     DCD              3,9,4,52,3,8,6,2,2,9
  111 00000028 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 dest    DCD              0,0,0,0,0,0,0,0,0
  112 0000004C                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\median.d -o.\objects\median.o -I.\RTE\_Target_1 -IC:\Kei
l_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSI
S\5.4.0\Device\ARM\ARMCM3\Include --predefine="__EVAL SETA 1" --predefine="__UV
ISION_VERSION SETA 527" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" 
--list=.\listings\median.lst median.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

main 00000000

Symbol: main
   Definitions
      At line 26 in file median.s
   Uses
      At line 20 in file median.s
Comment: main used once
med 00000040

Symbol: med
   Definitions
      At line 53 in file median.s
   Uses
      At line 75 in file median.s
Comment: med used once
median 00000000

Symbol: median
   Definitions
      At line 19 in file median.s
   Uses
      None
Comment: median unused
stop 000000BA

Symbol: stop
   Definitions
      At line 107 in file median.s
   Uses
      None
Comment: stop unused
wordcopy 000000B0

Symbol: wordcopy
   Definitions
      At line 101 in file median.s
   Uses
      At line 104 in file median.s
Comment: wordcopy used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Block 00000000

Symbol: Block
   Definitions
      At line 109 in file median.s
   Uses
      None
Comment: Block unused
dest 00000028

Symbol: dest
   Definitions
      At line 111 in file median.s
   Uses
      At line 28 in file median.s
      At line 98 in file median.s

src 00000000

Symbol: src
   Definitions
      At line 110 in file median.s
   Uses
      At line 27 in file median.s
      At line 52 in file median.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

first 00000003

Symbol: first
   Definitions
      At line 21 in file median.s
   Uses
      At line 32 in file median.s
Comment: first used once
last 00000009

Symbol: last
   Definitions
      At line 22 in file median.s
   Uses
      At line 80 in file median.s
Comment: last used once
num 00000008

Symbol: num
   Definitions
      At line 23 in file median.s
   Uses
      At line 29 in file median.s
Comment: num used once
testnum 0000000A

Symbol: testnum
   Definitions
      At line 99 in file median.s
   Uses
      At line 100 in file median.s
Comment: testnum used once
4 symbols
348 symbols in table
